#!/bin/bash

set -e

function die { echo "$*" >&2; exit 1; }
function require { command -v "$1" >/dev/null || die "ERROR: command '$1' required but not found."; }

require "jq"
require "curl"

function get_value_from_line { 
  echo "${1#*=}"
}

json_value="jq -cr"

#----------------------------------------------------------------

SONAR_REPORT_FILE="./.sonarqube/out/.sonar/report-task.txt"
SONAR_CONFIG_FILE="./sonar-project.properties"

SONAR_HOST_URL_KEY="serverUrl"
SONAR_CE_TASK_URL_KEY="ceTaskUrl"
SONAR_ANALYSIS_API="api/qualitygates/project_status"

SONAR_CONFIG_LOGIN_KEY="sonar.login"
SONAR_CONFIG_PROJECT_KEY="sonar.projectKey"
SONAR_CONFIG_PROJECT_DIR="sonar.sources"
SONAR_API_WAIT_INTERVAL=5

#----------------------------------------------------------------

# sonar.login should not be in the config file
sonar_project_key=$(get_value_from_line "$(grep "$SONAR_CONFIG_PROJECT_KEY" "$SONAR_CONFIG_FILE")")
sonar_project_dir=$(get_value_from_line "$(grep "$SONAR_CONFIG_PROJECT_DIR" "$SONAR_CONFIG_FILE")")
sonar_login=$(get_value_from_line "$(grep "$SONAR_CONFIG_LOGIN_KEY" "$SONAR_CONFIG_FILE")")

if [[ -n "$sonar_login" ]] && echo "$sonar_login" | grep -q "[A-Za-z0-9]{40}"; then
  die "ERROR: sonar.login should not exist in the sonar-project.properties file - please pass it in as a parameter using -Dsonar.login=... instead."
fi

sonar_login="$SONARQUBE_LOGIN_KEY"

# Scan
cd "$sonar_project_dir"
mono "/usr/bin/sonar-scanner-msbuild/SonarQube.Scanner.MSBuild.exe" "begin" \
  "/d:sonar.login=$sonar_login" \
  "/d:sonar.host.url=https://sonarqube.jupiter-preprod.platform.myob.com/" \
  "/k:$sonar_project_key"
set +e
dotnet restore --no-cache
dotnet build
set -e
mono "/usr/bin/sonar-scanner-msbuild/SonarQube.Scanner.MSBuild.exe" "end" "/d:sonar.login=$sonar_login"

source "sonar-await-results"

